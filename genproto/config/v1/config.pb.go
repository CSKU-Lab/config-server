// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: config/v1/config.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLanguagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Languages     []*Language            `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLanguagesResponse) Reset() {
	*x = GetLanguagesResponse{}
	mi := &file_config_v1_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLanguagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguagesResponse) ProtoMessage() {}

func (x *GetLanguagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguagesResponse.ProtoReflect.Descriptor instead.
func (*GetLanguagesResponse) Descriptor() ([]byte, []int) {
	return file_config_v1_config_proto_rawDescGZIP(), []int{0}
}

func (x *GetLanguagesResponse) GetLanguages() []*Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

type GetLanguagesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IncludeName    bool                   `protobuf:"varint,1,opt,name=include_name,json=includeName,proto3" json:"include_name,omitempty"`
	IncludeVersion bool                   `protobuf:"varint,2,opt,name=include_version,json=includeVersion,proto3" json:"include_version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetLanguagesRequest) Reset() {
	*x = GetLanguagesRequest{}
	mi := &file_config_v1_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLanguagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguagesRequest) ProtoMessage() {}

func (x *GetLanguagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguagesRequest.ProtoReflect.Descriptor instead.
func (*GetLanguagesRequest) Descriptor() ([]byte, []int) {
	return file_config_v1_config_proto_rawDescGZIP(), []int{1}
}

func (x *GetLanguagesRequest) GetIncludeName() bool {
	if x != nil {
		return x.IncludeName
	}
	return false
}

func (x *GetLanguagesRequest) GetIncludeVersion() bool {
	if x != nil {
		return x.IncludeVersion
	}
	return false
}

type Language struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Version       *string                `protobuf:"bytes,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	BuildScript   string                 `protobuf:"bytes,4,opt,name=build_script,json=buildScript,proto3" json:"build_script,omitempty"`
	RunScript     string                 `protobuf:"bytes,5,opt,name=run_script,json=runScript,proto3" json:"run_script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Language) Reset() {
	*x = Language{}
	mi := &file_config_v1_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Language) ProtoMessage() {}

func (x *Language) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Language.ProtoReflect.Descriptor instead.
func (*Language) Descriptor() ([]byte, []int) {
	return file_config_v1_config_proto_rawDescGZIP(), []int{2}
}

func (x *Language) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Language) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Language) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *Language) GetBuildScript() string {
	if x != nil {
		return x.BuildScript
	}
	return ""
}

func (x *Language) GetRunScript() string {
	if x != nil {
		return x.RunScript
	}
	return ""
}

var File_config_v1_config_proto protoreflect.FileDescriptor

const file_config_v1_config_proto_rawDesc = "" +
	"\n" +
	"\x16config/v1/config.proto\x12\tconfig.v1\"I\n" +
	"\x14GetLanguagesResponse\x121\n" +
	"\tlanguages\x18\x01 \x03(\v2\x13.config.v1.LanguageR\tlanguages\"a\n" +
	"\x13GetLanguagesRequest\x12!\n" +
	"\finclude_name\x18\x01 \x01(\bR\vincludeName\x12'\n" +
	"\x0finclude_version\x18\x02 \x01(\bR\x0eincludeVersion\"\xa9\x01\n" +
	"\bLanguage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x1d\n" +
	"\aversion\x18\x03 \x01(\tH\x01R\aversion\x88\x01\x01\x12!\n" +
	"\fbuild_script\x18\x04 \x01(\tR\vbuildScript\x12\x1d\n" +
	"\n" +
	"run_script\x18\x05 \x01(\tR\trunScriptB\a\n" +
	"\x05_nameB\n" +
	"\n" +
	"\b_version2b\n" +
	"\rConfigService\x12Q\n" +
	"\fGetLanguages\x12\x1e.config.v1.GetLanguagesRequest\x1a\x1f.config.v1.GetLanguagesResponse\"\x00B\x93\x01\n" +
	"\rcom.config.v1B\vConfigProtoP\x01Z0github.com/CSKU-Lab/config-server/grpc/config/v1\xa2\x02\x03CXX\xaa\x02\tConfig.V1\xca\x02\tConfig\\V1\xe2\x02\x15Config\\V1\\GPBMetadata\xea\x02\n" +
	"Config::V1b\x06proto3"

var (
	file_config_v1_config_proto_rawDescOnce sync.Once
	file_config_v1_config_proto_rawDescData []byte
)

func file_config_v1_config_proto_rawDescGZIP() []byte {
	file_config_v1_config_proto_rawDescOnce.Do(func() {
		file_config_v1_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_v1_config_proto_rawDesc), len(file_config_v1_config_proto_rawDesc)))
	})
	return file_config_v1_config_proto_rawDescData
}

var file_config_v1_config_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_config_v1_config_proto_goTypes = []any{
	(*GetLanguagesResponse)(nil), // 0: config.v1.GetLanguagesResponse
	(*GetLanguagesRequest)(nil),  // 1: config.v1.GetLanguagesRequest
	(*Language)(nil),             // 2: config.v1.Language
}
var file_config_v1_config_proto_depIdxs = []int32{
	2, // 0: config.v1.GetLanguagesResponse.languages:type_name -> config.v1.Language
	1, // 1: config.v1.ConfigService.GetLanguages:input_type -> config.v1.GetLanguagesRequest
	0, // 2: config.v1.ConfigService.GetLanguages:output_type -> config.v1.GetLanguagesResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_config_v1_config_proto_init() }
func file_config_v1_config_proto_init() {
	if File_config_v1_config_proto != nil {
		return
	}
	file_config_v1_config_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_v1_config_proto_rawDesc), len(file_config_v1_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_config_v1_config_proto_goTypes,
		DependencyIndexes: file_config_v1_config_proto_depIdxs,
		MessageInfos:      file_config_v1_config_proto_msgTypes,
	}.Build()
	File_config_v1_config_proto = out.File
	file_config_v1_config_proto_goTypes = nil
	file_config_v1_config_proto_depIdxs = nil
}
